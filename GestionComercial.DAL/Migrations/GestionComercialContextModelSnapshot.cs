// <auto-generated />
using System;
using GestionComercial.DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionComercial.DAL.Migrations
{
    [DbContext(typeof(GestionComercialContext))]
    partial class GestionComercialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionComercial.Model.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool?>("EsActivaCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ES_ACTIVA_CATEGORIA")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistroCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_CATEGORIA")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE_CATEGORIA");

                    b.HasKey("IdCategoria")
                        .HasName("PK__CATEGORI__4BD51FA5F1215986");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Cliente", b =>
                {
                    b.Property<string>("RutCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_CLIENTE");

                    b.Property<string>("ApellidoCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("APELLIDO_CLIENTE");

                    b.Property<string>("CorreoCliente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO_CLIENTE");

                    b.Property<string>("FonoCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FONO_CLIENTE");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMBRE_CLIENTE");

                    b.HasKey("RutCliente")
                        .HasName("PK__CLIENTE__4FE6A3805CF4BAE9");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.DetalleOrdenCompra", b =>
                {
                    b.Property<int>("IdDetalleOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DETALLE_ORDEN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrden"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD");

                    b.Property<int?>("IdOrdenCompra")
                        .HasColumnType("int")
                        .HasColumnName("ID_ORDEN_COMPRA");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int?>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PRECIO");

                    b.HasKey("IdDetalleOrden")
                        .HasName("PK__DETALLE___C1617362308A7B27");

                    b.HasIndex("IdOrdenCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DETALLE_ORDEN_COMPRA", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DETALLE_VENTA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool?>("EsFiado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ES_FIADO")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("PRECIO");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("TOTAL");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DETALLE___49DABA0C8B88FFFF");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DETALLE_VENTA", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Fiado", b =>
                {
                    b.Property<DateTime?>("FechaRegistroVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_VENTA")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("NUMERO_DOCUMENTO");

                    b.Property<string>("RutCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_CLIENTE");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPO_PAGO");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("RutCliente");

                    b.ToTable("FIADO", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MENU");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ICONO");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("UrlMenu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("URL_MENU");

                    b.HasKey("IdMenu")
                        .HasName("PK__MENU__4728FC60914528FA");

                    b.ToTable("MENU", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.MenuRol", b =>
                {
                    b.Property<int>("IdMenuRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MENU_ROL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuRol"));

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("ID_MENU");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROL");

                    b.HasKey("IdMenuRol")
                        .HasName("PK__MENU_ROL__138F08B4006B0069");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("MENU_ROL", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.NumeroDocumento", b =>
                {
                    b.Property<int>("IdNumeroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NUMERO_DOCUMENTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroDocumento"));

                    b.Property<DateTime?>("FechaRegistroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_DOCUMENTO")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UltimoNumero")
                        .HasColumnType("int")
                        .HasColumnName("ULTIMO_NUMERO");

                    b.HasKey("IdNumeroDocumento")
                        .HasName("PK__NUMERO_D__193AEF0E9D41333E");

                    b.ToTable("NUMERO_DOCUMENTO", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.OrdenCompra", b =>
                {
                    b.Property<int>("IdOrdenCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ORDEN_COMPRA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdenCompra"));

                    b.Property<DateTime?>("FechaOrdenCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_ORDEN_COMPRA")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RutProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_PROVEEDOR");

                    b.HasKey("IdOrdenCompra")
                        .HasName("PK__ORDEN_CO__6C6555B8E5B96314");

                    b.HasIndex("RutProveedor");

                    b.ToTable("ORDEN_COMPRA", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUCTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("EsActivoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ES_ACTIVO_PRODUCTO")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistroProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_PRODUCTO")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE_PRODUCTO");

                    b.Property<int?>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PRECIO");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("STOCK");

                    b.HasKey("IdProducto")
                        .HasName("PK__PRODUCTO__88BD0357E00B4A51");

                    b.HasIndex("IdCategoria");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.ProductoPorProveedor", b =>
                {
                    b.Property<int>("IdProductoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoProveedor"));

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoNavigationIdProducto")
                        .HasColumnType("int");

                    b.Property<string>("RutProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutProveedorNavigationRutProveedor")
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProductoProveedor");

                    b.HasIndex("IdProductoNavigationIdProducto");

                    b.HasIndex("RutProveedorNavigationRutProveedor");

                    b.ToTable("ProductoPorProveedors");
                });

            modelBuilder.Entity("GestionComercial.Model.Proveedor", b =>
                {
                    b.Property<string>("RutProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_PROVEEDOR");

                    b.Property<string>("CorreoProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CORREO_PROVEEDOR");

                    b.Property<string>("NombreProveedor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOMBRE_PROVEEDOR");

                    b.Property<string>("TelefonoProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TELEFONO_PROVEEDOR");

                    b.HasKey("RutProveedor")
                        .HasName("PK__PROVEEDO__2D7D308F8DF3CA50");

                    b.ToTable("PROVEEDOR", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ROL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreRol")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE_ROL");

                    b.HasKey("IdRol")
                        .HasName("PK__ROL__203B0F680BDB756F");

                    b.ToTable("ROL", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CLAVE");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CORREO");

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ES_ACTIVO")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistroUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_USUARIO")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROL");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE_COMPLETO");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__91136B9060979093");

                    b.HasIndex("IdRol");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime?>("FechaRegistroVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO_VENTA")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("NUMERO_DOCUMENTO");

                    b.Property<string>("RutCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_CLIENTE");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPO_PAGO");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL");

                    b.HasKey("IdVenta")
                        .HasName("PK__VENTA__F3B6C1B44191C484");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("RutCliente");

                    b.ToTable("VENTA", null, t =>
                        {
                            t.HasTrigger("TR_InsertFiados");
                        });
                });

            modelBuilder.Entity("ProductoProveedor", b =>
                {
                    b.Property<string>("RutProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RUT_PROVEEDOR");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUCTO");

                    b.HasKey("RutProveedor", "IdProducto")
                        .HasName("PK_ProductosPredeterminados");

                    b.HasIndex("IdProducto");

                    b.ToTable("PRODUCTO_PROVEEDOR", (string)null);
                });

            modelBuilder.Entity("GestionComercial.Model.DetalleOrdenCompra", b =>
                {
                    b.HasOne("GestionComercial.Model.OrdenCompra", "IdOrdenCompraNavigation")
                        .WithMany("DetalleOrdenCompras")
                        .HasForeignKey("IdOrdenCompra")
                        .HasConstraintName("FK__DETALLE_O__ID_OR__571DF1D5");

                    b.HasOne("GestionComercial.Model.Producto", "IdProductoNavigation")
                        .WithMany("DetalleOrdenCompras")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DETALLE_O__ID_PR__5812160E");

                    b.Navigation("IdOrdenCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.DetalleVenta", b =>
                {
                    b.HasOne("GestionComercial.Model.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DETALLE_V__ID_PR__47DBAE45");

                    b.HasOne("GestionComercial.Model.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DETALLE_V__ID_VE__46E78A0C");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.Fiado", b =>
                {
                    b.HasOne("GestionComercial.Model.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__FIADO__ID_USUARI__4AB81AF0");

                    b.HasOne("GestionComercial.Model.Cliente", "RutClienteNavigation")
                        .WithMany()
                        .HasForeignKey("RutCliente")
                        .HasConstraintName("FK__FIADO__RUT_CLIEN__4BAC3F29");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("RutClienteNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.MenuRol", b =>
                {
                    b.HasOne("GestionComercial.Model.Menu", "IdMenuNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__MENU_ROL__ID_MEN__29572725");

                    b.HasOne("GestionComercial.Model.Rol", "IdRolNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__MENU_ROL__ID_ROL__2A4B4B5E");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.OrdenCompra", b =>
                {
                    b.HasOne("GestionComercial.Model.Proveedor", "RutProveedorNavigation")
                        .WithMany("OrdenCompras")
                        .HasForeignKey("RutProveedor")
                        .HasConstraintName("FK__ORDEN_COM__RUT_P__534D60F1");

                    b.Navigation("RutProveedorNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.Producto", b =>
                {
                    b.HasOne("GestionComercial.Model.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__PRODUCTO__ID_CAT__37A5467C");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.ProductoPorProveedor", b =>
                {
                    b.HasOne("GestionComercial.Model.Producto", "IdProductoNavigation")
                        .WithMany()
                        .HasForeignKey("IdProductoNavigationIdProducto");

                    b.HasOne("GestionComercial.Model.Proveedor", "RutProveedorNavigation")
                        .WithMany()
                        .HasForeignKey("RutProveedorNavigationRutProveedor");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("RutProveedorNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.Usuario", b =>
                {
                    b.HasOne("GestionComercial.Model.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__USUARIO__ID_ROL__2D27B809");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("GestionComercial.Model.Venta", b =>
                {
                    b.HasOne("GestionComercial.Model.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__VENTA__ID_USUARI__4222D4EF");

                    b.HasOne("GestionComercial.Model.Cliente", "RutClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("RutCliente")
                        .HasConstraintName("FK__VENTA__RUT_CLIEN__4316F928");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("RutClienteNavigation");
                });

            modelBuilder.Entity("ProductoProveedor", b =>
                {
                    b.HasOne("GestionComercial.Model.Producto", null)
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_ProductosPredeterminados_Producto");

                    b.HasOne("GestionComercial.Model.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("RutProveedor")
                        .IsRequired()
                        .HasConstraintName("FK_ProductosPredeterminados_Proveedor");
                });

            modelBuilder.Entity("GestionComercial.Model.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("GestionComercial.Model.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("GestionComercial.Model.Menu", b =>
                {
                    b.Navigation("MenuRols");
                });

            modelBuilder.Entity("GestionComercial.Model.OrdenCompra", b =>
                {
                    b.Navigation("DetalleOrdenCompras");
                });

            modelBuilder.Entity("GestionComercial.Model.Producto", b =>
                {
                    b.Navigation("DetalleOrdenCompras");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("GestionComercial.Model.Proveedor", b =>
                {
                    b.Navigation("OrdenCompras");
                });

            modelBuilder.Entity("GestionComercial.Model.Rol", b =>
                {
                    b.Navigation("MenuRols");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GestionComercial.Model.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("GestionComercial.Model.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
